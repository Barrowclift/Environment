[

// FORMATTING ------------------------------------------------------------------

	// General Reindent (does not work well)
	{
		"keys": ["super+shift+r"],
		"command": "reindent",
		"args":
		{
			"single_line": false
		}
	},

	// Java/Javascript Reindentation
	{ "keys":
		["alt+shift+r"],
		"command": "js_format"
	},

	// Wrap Text Blocks
	{
		"keys": ["alt+shift+f"],
		"command": "wrap_lines_plus"
	},	

	// Convert Spaces to Tabs
	{
		"keys": ["alt+shift+t"],
		"command": "unexpand_tabs"
	},

	// Auto-close HTML Tags
	{
		"keys": [">"],
		"command": "auto_close_tag",
		"args":
		{
			"prefix": ">"
		},
		"context":
		[
			{
				"key": "selector",
				"operator": "equal",
				"operand": "text.html meta.tag -string -punctuation.definition.tag.begin.html -meta.scope.between-tag-pair.html, text.xml meta.tag -string -punctuation.definition.tag.begin.xml -meta.scope.between-tag-pair.xml",
				"match_all": true
			},
			{
				"key": "preceding_text",
				"operator": "not_regex_contains",
				"operand": "(?:\\<(?:img|br|hr|meta|link|base|input)\\>[^<]*)|/$"
			}
		]
	},

	// Substitute em-dashes character with unicode representation when editing markdown or HTML
	{
		"keys": ["alt+-"],
		"command": "insert_snippet",
		"args": {
			"contents": "&#8212;"
		},
		"context": [{
			"key": "selector",
			"operator": "equal",
			"operand": "text.html.markdown, text.html"
		}]
	},
	// Substitute ampersand character with unicode representation when editing markdown or HTML
	{
		"keys": ["alt+&"],
		"command": "insert_snippet",
		"args": {
			"contents": "&amp;"
		},
		"context": [{
			"key": "selector",
			"operator": "equal",
			"operand": "text.html.markdown, text.html"
		}]
	},

// WORKSPACE -------------------------------------------------------------------

	// Close project
	{
		"keys": ["super+shift+c"],
		"command": "close_workspace"
	},

	// Hide Side Bar
	{
		"keys": ["super+b"],
		"command": "toggle_side_bar"
	},

	// Open User Keybindings
	{
		"keys": ["super+."],
		"command": "edit_settings", "args":
		{
			"base_file": "${packages}/Default/Default ($platform).sublime-keymap",
			"default": "[\n\t$0\n]\n"
		}
	},

	// Open New Tab
	{
		"keys": ["super+t"],
		"command": "new_file"
	},

	// Reopen last closed tab (Chrome style)
	{
		"keys": ["super+shift+t"],
		"command": "reopen_last_file"
	},

	// Open New Window
	{
		"keys": ["super+n"],
		"command": "new_window"
	},

	// Show/Hide Console
	{
		"keys": ["ctrl+`"],
		"command": "show_panel",
		"args":
		{
			"panel": "console",
			"toggle": true
		}
	},

// BUILD -----------------------------------------------------------------------

	// Build
	{
		"keys": ["alt+b"],
		"command": "build"
	},

	// Build markdown with Markdown Preview
	{
		"keys": ["alt+m"],
		"command": "markdown_preview",
		"args":
		{
			"target": "browser",
			"parser":"github"
		}
	},

	// Open Terminal Window at location
	{
		"keys": ["ctrl+shift+t"],
		"command": "open_terminal"
	},

	// Open Terminal Window at project root
	{
		"keys": ["super+shift+ctrl+t"],
		"command": "open_terminal_project_folder"
	},

	// Open Finder Window at location
	{
		"keys": ["ctrl+shift+f"],
		"command": "open_finder"
	},

	// Spell check
	{
		"keys": ["ctrl+s+c"],
		"command": "toggle_setting",
		"args":
		{
			"setting": "spell_check"
		}
	},

	// One Column
	{
		"keys": ["super+ctrl+1"],
		"command": "set_layout",
		"args":
		{
			"cells": [[0, 0, 1, 1]],
			"cols": [0.0, 1.0],
			"rows": [0.0, 1.0]
		}
	},

	// Two Columns
	{
		"keys": ["super+ctrl+2"],
		"command": "set_layout",
		"args":
		{
			"cells": [[0, 0, 1, 1], [1, 0, 2, 1]],
			"cols": [0.0, 0.5, 1.0],
			"rows": [0.0, 1.0]
		}
	},

// FIXES -----------------------------------------------------------------------

	// Fix strange "division" shortcut with mechanical keyboard
	{
		"keys": ["alt+/"],
		"command": "toggle_comment"
	},

// MISC ------------------------------------------------------------------------

	// So the second to last binding always has a comma
	{
		"zzz": null
	}
]